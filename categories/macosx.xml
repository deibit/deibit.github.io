<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>deibit (MacOSX)</title><link>http://deibit.com/</link><description></description><atom:link type="application/rss+xml" rel="self" href="http://deibit.com/categories/macosx.xml"></atom:link><language>es</language><lastBuildDate>Sun, 17 Jul 2016 09:42:34 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Getting back dragging on Mac OS X Lion</title><link>http://deibit.com/posts/2011/11/19/getting-back-dragndrop-window-on-mac-os-x-lion/</link><dc:creator>David García</dc:creator><description>&lt;p&gt;Annoying, Apple removed drag’n'drop a window with a single click, besides that you cannot select a block of text with ease. But there is a easy way to bring back the feature.&lt;/p&gt;
&lt;p&gt;Go to System Preferences-&amp;gt;Universal Access-&amp;gt;Mouse and TrackPad-&amp;gt;Select TrackPad Options and mark this way:&lt;/p&gt;
&lt;p&gt;(yes, my Mac is in Spanish)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://daganu.files.wordpress.com/2011/11/2011-11-19-095406-00001.png"&gt;&lt;img src="http://daganu.files.wordpress.com/2011/11/2011-11-19-095406-00001.png?w=300" alt="" title="2011-11-19 09:54:06 +00001" width="300" height="263" class="aligncenter size-medium wp-image-360"&gt;&lt;/a&gt;&lt;/p&gt;
</description><category>drag</category><category>dragging</category><category>drop</category><category>lion</category><category>mac</category><category>MacOSX</category><category>trackpad</category><category>window</category><guid>http://deibit.com/posts/2011/11/19/getting-back-dragndrop-window-on-mac-os-x-lion/</guid><pubDate>Sat, 19 Nov 2011 10:00:05 GMT</pubDate></item><item><title>Usando MacPorts</title><link>http://deibit.com/posts/2011/04/22/usando-macports/</link><dc:creator>David García</dc:creator><description>&lt;p&gt;Una de las carencias de los Macs es que le faltan ciertas librerías o que son anticuadas. Por ejemplo, la versión de GCC que trae por defecto (previa instalación de XCode) es la 4.2.1. Para paliar esa falta hay varias opciones: &lt;a href="https://github.com/mxcl/homebrew"&gt;Homebrew&lt;/a&gt;, &lt;a href="http://www.macports.org/"&gt;MacPorts&lt;/a&gt; y &lt;a href="http://www.finkproject.org/"&gt;Finks&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Personalmente uso MacPorts, aunque no he probado los otros, dejo aquí algunos comandos que siempre termino reaprendiendo cada vez que tengo que echar mano de él.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Buscar algún programa o librería:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$ port search “palabra”&lt;/p&gt;
&lt;p&gt;Admite varias opciones como: –glob, –regex, –line y –case-sensitive entre otras.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Instalar:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$ sudo port install “paquete”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desinstalar:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$ sudo port uninstall “paquete”&lt;/p&gt;
&lt;p&gt;Entre las opciones, permite cargarse o no las dependencias y/o dependencias inversas.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;¿Que tengo instalado?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$ port installed&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Desinstala los que estén inactivos:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$ sudo port uninstall inactive&lt;/p&gt;
&lt;p&gt;Me explico. Por defecto MacPorts no desinstala la versión anterior cuando actualizamos (para no romper dependencias) pero si queremos que las borre lo podemos hacer indicando “inactive” a la orden uninstall.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actualizar MacPort:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$ sudo port selfudate&lt;/p&gt;
&lt;p&gt;Esto es para actualizar “port”, la herramienta en si.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actualizar paquetes:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$ sudo port upgrade outdated&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Información sobre un paquete:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$ port info “paquete”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dependencias de un paquete:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$ port deps “paquete”&lt;/p&gt;
&lt;p&gt;y las inversas: $ port dependents “paquete” &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hay bastantes más opciones, el programa es muy versátil e intuitivo, si queremos más información: &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;$ port help&lt;br&gt;
o&lt;br&gt;
$ port help “comando”&lt;/p&gt;
</description><category>MacOSX</category><category>macports</category><category>port</category><guid>http://deibit.com/posts/2011/04/22/usando-macports/</guid><pubDate>Fri, 22 Apr 2011 05:51:33 GMT</pubDate></item><item><title>Actualizar la Haskell Platform en Mac OS X</title><link>http://deibit.com/posts/2011/03/29/actualizar-la-haskell-platform-en-mac-os-x/</link><dc:creator>David García</dc:creator><description>&lt;p&gt;Hace tiempo (¿febrero?) que publicaron una actualización de la plataforma Haskell. Como es un lenguaje con un ecosistema desconocido para mi preferí desinstalar la antigua plataforma antes de instalar la nueva.&lt;/p&gt;
&lt;p&gt;Sucedió que no estaba claro por donde se le podía meter mano para desinstalar e incluso la gente del IRC tenía sus dudas. Entre unos y otros vimos que el desinstalador se hallaba en la ruta:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;/Library/Frameworks/GHC.framework/Tools&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;sudo Uninstaller y listo. &lt;/p&gt;
&lt;p&gt;Tras la instalación de la nueva (es point and click) ya viene con el nuevo GHC 7.0.2&lt;/p&gt;
&lt;p&gt;Ahora a pelearme con Cabal.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;a href="http://hackage.haskell.org/platform"&gt;&lt;img src="http://hackage.haskell.org/platform/icons/button-100.png"&gt;&lt;/a&gt;&lt;/p&gt;
</description><category>haskell</category><category>MacOSX</category><category>uninstall</category><guid>http://deibit.com/posts/2011/03/29/actualizar-la-haskell-platform-en-mac-os-x/</guid><pubDate>Tue, 29 Mar 2011 14:56:11 GMT</pubDate></item><item><title>Algunos atajos interesantes en Bash</title><link>http://deibit.com/posts/2011/01/16/algunos-atajos-interesantes-en-bash/</link><dc:creator>David García</dc:creator><description>&lt;p&gt;Sobre todo en Mac, se echa de menos algunos atajos de teclado para ir al final o al principio (‘end’ y ‘home’) de una linea en el Terminal.&lt;/p&gt;
&lt;p&gt;Estos atajos de teclado funcionan en todos los Bash, así que pueden usarse en Mac y suplir esa carencia.&lt;/p&gt;
&lt;p&gt;Ir al principio y final de una frase respectivamente: Ctrl + A y Ctrl + E&lt;/p&gt;
&lt;p&gt;Avanzar una palabra antes y después del cursor: Alt + B y Alt + F&lt;/p&gt;
&lt;p&gt;Borrar lo que haya delante o después del cursor: Ctrl + U y Ctrl + K&lt;/p&gt;
&lt;p&gt;Borrar una palabra delante o después del cursor: Ctrl + W y Alt + D&lt;/p&gt;
&lt;p&gt;Cambiar a MAY, min, Cap una palabra: Alt + U, Alt + M, Alt + C respectivamente.&lt;/p&gt;
&lt;p&gt;Transponer dos caracteres o dos palabras: Ctrl + T y Alt + T&lt;/p&gt;
&lt;p&gt;Histórico atrás y hacia delante: Ctrl + R y Ctrl + S&lt;/p&gt;
&lt;p&gt;Estamos editando una linea muy larga y decidimos hacerlo en nuestro $EDITOR: Ctrl + X Ctrl + E&lt;/p&gt;
</description><category>bash</category><category>consola</category><category>linux</category><category>MacOSX</category><category>Shortcuts</category><category>terminal</category><guid>http://deibit.com/posts/2011/01/16/algunos-atajos-interesantes-en-bash/</guid><pubDate>Sun, 16 Jan 2011 13:05:19 GMT</pubDate></item><item><title>Copiar de la linea de comandos al portapapeles</title><link>http://deibit.com/posts/2011/01/12/copiar-de-la-linea-de-comandos-al-portapapeles/</link><dc:creator>David García</dc:creator><description>&lt;p&gt;Lo dejo aquí como nota, siempre se me olvida y termino buscándolo. La idea: copiar la salida de un comando al portapapeles.&lt;/p&gt;
&lt;p&gt;En GNU tenemos ‘xclip’ y ‘xsel’ y para Mac OSX el instalado por defecto: ‘pbcopy’.&lt;/p&gt;
</description><category>bash</category><category>linux</category><category>MacOSX</category><guid>http://deibit.com/posts/2011/01/12/copiar-de-la-linea-de-comandos-al-portapapeles/</guid><pubDate>Wed, 12 Jan 2011 21:47:14 GMT</pubDate></item><item><title>Crear librerías dinámicas en Mac OSX</title><link>http://deibit.com/posts/2010/12/16/crear-librerias-dinamicas-en-mac-osx/</link><dc:creator>David García</dc:creator><description>&lt;p&gt;Compilando sqllite3 para Mac OSX sale un archivo objeto sqlite3.o. Con el podemos enlazarlo estáticamente con nuestro ejecutable:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;bellucci:sqlite-autoconf-3070400 david$ gcc libsqlite3.o test.c -o test-stat&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;vemos con file:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;bellucci:sqlite-autoconf-3070400 david$ file libsqlite3.o&lt;br&gt;
libsqlite3.o: Mach-O 64-bit object x86_64&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ese libsqlite3.o lo podemos transformar en una librería dinámica con:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;bellucci:sqlite-autoconf-3070400 david$ gcc -dynamiclib -o libsqlite3.dynlib libsqlite3.o&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;hacemos un file:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;bellucci:sqlite-autoconf-3070400 david$ file libsqlite3.dylib&lt;br&gt;
libsqlite3.dylib: Mach-O 64-bit dynamically linked shared library x86_64&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Si queremos que explicitamente nuestro ejecutable compile con esa librería y no la que viene (a riesgo de que no sea compatible) con&lt;br&gt;
el SDK de Mac:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;bellucci:sqlite-autoconf-3070400 david$ gcc -L. -lsqlite3 test.c -o test-dyn&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;comprobamos:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;bellucci:sqlite-autoconf-3070400 david$ otool -L test-dyn&lt;br&gt;
test-dyn:&lt;br&gt;
	libsqlite3.dylib (compatibility version 0.0.0, current version 0.0.0)&lt;br&gt;
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 125.2.1)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Anteriormente, una simple compilación nos generaba un ejecutable enlazado dinámicamente con la sqlite3 del sistema y para ver la diferencia:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;bellucci:sqlite-autoconf-3070400 david$ otool -L test&lt;br&gt;
test:&lt;br&gt;
	/usr/lib/libsqlite3.dylib (compatibility version 9.0.0, current version 9.6.0)&lt;br&gt;
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 125.2.1)&lt;/em&gt;&lt;/p&gt;
</description><category>c</category><category>c++</category><category>compiler</category><category>gcc</category><category>library</category><category>MacOSX</category><guid>http://deibit.com/posts/2010/12/16/crear-librerias-dinamicas-en-mac-osx/</guid><pubDate>Thu, 16 Dec 2010 20:32:21 GMT</pubDate></item><item><title>Trucos para Mac OSX</title><link>http://deibit.com/posts/2010/12/12/trucos-para-mac-osx/</link><dc:creator>David García</dc:creator><description>&lt;p&gt;Hacer una “nota” instantánea con el texto seleccionado.&lt;/p&gt;
&lt;p&gt;cmd + shift + y &lt;/p&gt;
&lt;p&gt;Capturar la pantalla:&lt;/p&gt;
&lt;p&gt;cmd + shift + 3&lt;/p&gt;
&lt;p&gt;Capturar un trozo de pantalla a seleccionar:&lt;/p&gt;
&lt;p&gt;cmd + shift + 4&lt;/p&gt;
&lt;p&gt;si pulsamos ctrl también, la imagen se pegará al portapapeles.&lt;/p&gt;
</description><category>MacOSX</category><guid>http://deibit.com/posts/2010/12/12/trucos-para-mac-osx/</guid><pubDate>Sun, 12 Dec 2010 14:23:32 GMT</pubDate></item><item><title>Ejecutar aplicaciones desde la linea de comandos en Mac OS X</title><link>http://deibit.com/posts/2010/09/07/ejecutar-aplicaciones-desde-la-linea-de-comandos-en-mac-os-x/</link><dc:creator>David García</dc:creator><description>&lt;p&gt;Si queremos lanzar una aplicación desde la linea de comandos del Mac, podemos usar el comando ‘open’:&lt;/p&gt;
&lt;p&gt;$ open /Applications/MacVim&lt;/p&gt;
&lt;p&gt;por ejemplo.&lt;/p&gt;
</description><category>bash</category><category>MacOSX</category><guid>http://deibit.com/posts/2010/09/07/ejecutar-aplicaciones-desde-la-linea-de-comandos-en-mac-os-x/</guid><pubDate>Tue, 07 Sep 2010 13:28:00 GMT</pubDate></item></channel></rss>