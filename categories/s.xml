<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>deibit (:s)</title><link>http://deibit.com/</link><description></description><atom:link type="application/rss+xml" rel="self" href="http://deibit.com/categories/s.xml"></atom:link><language>es</language><lastBuildDate>Sun, 17 Jul 2016 09:42:34 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>vim: Extracting text via Match and Replace</title><link>http://deibit.com/posts/2012/12/15/vim-extracting-text-via-match-and-replace/</link><dc:creator>David García</dc:creator><description>&lt;p&gt;Lets suppose you want to extract text from some lines, exactly the url of the img tags.&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;/p&gt;
&lt;p&gt;&amp;lt;img src="http://www.images.com/?=1" alt="images"/&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src="http://www.images.com/?=2" alt="images2"/&amp;gt;&lt;/p&gt;
&lt;p&gt;[/sourcecode]&lt;/p&gt;
&lt;p&gt;What we are going to do is match the target data with a regexp, group it and put it in the replace with field of a :s operation:&lt;/p&gt;
&lt;p&gt;:%s/.*\(http:\/\/www.images.com\/?=.\).*\1/g&lt;/p&gt;
&lt;p&gt;After that the two lines are replaced with:&lt;/p&gt;
&lt;p&gt;[sourcecode language="html"]&lt;/p&gt;
&lt;p&gt;http://www.images.com/?=1&lt;/p&gt;
&lt;p&gt;http://www.images.com/?=2&lt;/p&gt;
&lt;p&gt;[/sourcecode]&lt;/p&gt;
&lt;p&gt;What that weird expression means is:&lt;/p&gt;
&lt;p&gt;:%s///g -&amp;gt; for all the buffer (%) substitute (s) this / with / this /&lt;/p&gt;
&lt;p&gt;The target part is:&lt;/p&gt;
&lt;p&gt;.*\(http:\/\/www.images.com\/?=.\).*&lt;/p&gt;
&lt;p&gt;.* -&amp;gt; for every character as many as it appears&lt;/p&gt;
&lt;p&gt;\(http:\/\/www.images.com\/?=.\) -&amp;gt; match this and put it in \1 group for latter reference.&lt;/p&gt;
&lt;p&gt;.*  -&amp;gt; same as before.&lt;/p&gt;
&lt;p&gt;And the replacement is:&lt;/p&gt;
&lt;p&gt;\1&lt;/p&gt;
&lt;p&gt;Which means just take the first group and use it for replacement&lt;/p&gt;
&lt;p&gt;So the final results will be our beloved urls.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
</description><category>:s</category><category>regexp</category><category>replacement</category><category>vim</category><guid>http://deibit.com/posts/2012/12/15/vim-extracting-text-via-match-and-replace/</guid><pubDate>Sat, 15 Dec 2012 21:23:54 GMT</pubDate></item></channel></rss>